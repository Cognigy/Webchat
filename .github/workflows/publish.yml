name: Publish

on:
    workflow_dispatch:
        inputs:
            version_number:
                description: "Version number to publish (e.g., 3.12.0). Leave empty to use the release with the 'latest' tag."
                required: false
                type: string

jobs:
    get-latest-version:
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.get-version.outputs.version }}
        steps:
            - name: Get latest release version
              id: get-version
              run: |
                if [ -n "${{ github.event.inputs.version_number }}" ]; then
                  echo "version=${{ github.event.inputs.version_number }}" >> $GITHUB_OUTPUT
                else
                  # Get the latest release version using curl and grep
                  LATEST_VERSION=$(curl -s "https://api.github.com/repos/cognigy/webchat/releases/latest" | grep -o '"tag_name": "[^"]*"' | sed 's/"tag_name": "//' | sed 's/"//' | sed 's/^v//')
                  if [ -z "$LATEST_VERSION" ]; then
                    echo "No release version found. LATEST_VERSION=$LATEST_VERSION"
                    exit 1
                  fi
                  echo "version=$LATEST_VERSION" >> $GITHUB_OUTPUT
                  echo "Using latest release version: $LATEST_VERSION"
                fi

    build:
        needs: get-latest-version
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              with:
                  ref: v${{ needs.get-latest-version.outputs.version }}
            - uses: actions/setup-node@v3
              with:
                  node-version: 22.x
            - run: git branch
            - run: npm ci
            - run: npm test

            # Use this GitHub Action
            - name: Check package version
              uses: technote-space/package-version-check-action@v1
              with:
                  COMMIT_DISABLED: 1

    publish-npm:
        needs: [build, get-latest-version]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
              with:
                  ref: v${{ needs.get-latest-version.outputs.version }}
            - uses: actions/setup-node@v3
              with:
                  node-version: 22.x
                  registry-url: https://registry.npmjs.org/
            - run: git branch
            - run: npm ci
            - run: npm run build
              # - run: npm publish
              env:
                  NODE_AUTH_TOKEN: ${{secrets.npm_token}}
